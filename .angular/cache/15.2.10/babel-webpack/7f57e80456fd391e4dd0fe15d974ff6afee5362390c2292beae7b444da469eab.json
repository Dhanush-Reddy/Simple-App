{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { env } from 'src/Envorinment/env';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseApiUrl = env.baseUrl;\n  }\n  // patientRegister(addPatient:Patient):Observable<Patient>\n  // {\n  //   return this.http.post<Patient>(this.baseApiUrl+'/Patient/Register_Patient',addPatient);\n  // }\n  postPatient(data) {\n    return this.http.post(this.baseApiUrl + 'AddPatient', data).pipe(map(res => {\n      return res;\n    }));\n  }\n  getPatient() {\n    return this.http.get(this.baseApiUrl + 'GetAll').pipe(map(res => {\n      return res;\n    }));\n  }\n  updatePatient(data, id) {\n    return this.http.put(this.baseApiUrl + \"UpdatePatient\" + id, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  deletePatient(id, pat) {\n    let header = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'resposneType': 'json',\n      'patientId': id\n    });\n    return this.http.delete(this.baseApiUrl + \"DeletePatient\").pipe(map(res => {\n      return res;\n    }));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAS,sBAAsB;AAC9D,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,eAAU,GAAUJ,GAAG,CAACK,OAAO;EACS;EAGxC;EACA;EACA;EACA;EAEAC,WAAW,CAACC,IAAQ;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACC,UAAU,GAAC,YAAY,EAACF,IAAI,CAAC,CAACG,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MAChF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEAC,UAAU;IACR,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACJ,UAAU,GAAC,QAAQ,CAAC,CAACC,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MACjE,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EACAG,aAAa,CAACP,IAAQ,EAACQ,EAAS;IAC9B,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACP,UAAU,GAAC,eAAe,GAACM,EAAE,EAACR,IAAI,CAAC,CAACG,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MAChF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EACAM,aAAa,CAACF,EAAS,EAACG,GAAG;IACzB,IAAIC,MAAM,GAAC,IAAIpB,WAAW,CAAC;MACzB,cAAc,EAAC,kBAAkB;MACjC,cAAc,EAAC,MAAM;MACrB,WAAW,EAAGgB;KACf,CAAC;IACF,OAAO,IAAI,CAACX,IAAI,CAACgB,MAAM,CAAC,IAAI,CAACX,UAAU,GAAC,eAAe,CAAE,CAACC,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MAC5E,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAAC;qBApCUT,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAmB,SAAVnB,UAAU;IAAAoB,YAFT;EAAM","names":["HttpHeaders","env","map","ApiService","constructor","http","baseUrl","postPatient","data","post","baseApiUrl","pipe","res","getPatient","get","updatePatient","id","put","deletePatient","pat","header","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/dhanushreddy/Desktop/Simple-App/src/app/shared/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, } from '@angular/common/http'\nimport { env } from 'src/Envorinment/env';\nimport { map } from 'rxjs/operators';\nimport { patientModel } from '../patient/patient.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  baseApiUrl:string = env.baseUrl;\n  constructor(private http: HttpClient) { }\n\n\n  // patientRegister(addPatient:Patient):Observable<Patient>\n  // {\n  //   return this.http.post<Patient>(this.baseApiUrl+'/Patient/Register_Patient',addPatient);\n  // }\n\n  postPatient(data:any){\n    return this.http.post<any>(this.baseApiUrl+'AddPatient',data).pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n\n  getPatient(){\n    return this.http.get(this.baseApiUrl+'GetAll').pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n  updatePatient(data:any,id:number){\n    return this.http.put(this.baseApiUrl+\"UpdatePatient\"+id,data).pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n  deletePatient(id:number,pat){\n    let header=new HttpHeaders({\n      'Content-Type':'application/json',\n      'resposneType':'json',\n      'patientId' : id\n    });\n    return this.http.delete(this.baseApiUrl+\"DeletePatient\",).pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}